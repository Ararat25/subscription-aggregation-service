services:
  server:
    build: .
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:8080"
    volumes:
      - .:/usr/src/app
    command: go run cmd/main.go
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  db:
    image: postgres:alpine
    container_name: db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrate:
    image: migrate/migrate
    env_file:
      - .env
    volumes:
      - ${MIGRATIONS_PATH}:/migrations
    command:
      [
        "-path", "/migrations",
        "-database",
        "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
        "up"
      ]
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres-db:
