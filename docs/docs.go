// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/subscription": {
            "post": {
                "description": "Добавляет новую подписку в систему",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Создать новую подписку",
                "parameters": [
                    {
                        "description": "Данные подписки",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID созданной подписки",
                        "schema": {
                            "$ref": "#/definitions/controller.CreateControllerResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/delete/{id}": {
            "delete": {
                "description": "Удаляет подписку по её идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Удалить подписку",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Статус выполнения",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID или ошибка удаления",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/update": {
            "put": {
                "description": "Обновляет данные существующей подписки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Обновить подписку",
                "parameters": [
                    {
                        "description": "Данные подписки",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление",
                        "schema": {
                            "$ref": "#/definitions/controller.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/{id}": {
            "get": {
                "description": "Возвращает данные подписки по её идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить подписку по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о подписке",
                        "schema": {
                            "$ref": "#/definitions/entity.Subscription"
                        }
                    },
                    "400": {
                        "description": "Неверный параметр id или ошибка получения данных",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "description": "Возвращает полный список всех подписок",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить список подписок",
                "responses": {
                    "200": {
                        "description": "Список подписок",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Subscription"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения данных",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/cost": {
            "get": {
                "description": "Возвращает суммарную стоимость подписок за указанный период с возможной фильтрацией по id пользователя и названию сервиса",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить общую стоимость подписок",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Дата начала периода (формат MM-YYYY)",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Дата конца периода (формат MM-YYYY)",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UUID пользователя",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Название сервиса",
                        "name": "service_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Общая стоимость",
                        "schema": {
                            "$ref": "#/definitions/controller.TotalCostControllerResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.CreateControllerResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "id созданной подписки",
                    "type": "integer",
                    "example": 15
                }
            }
        },
        "controller.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "строка для сообщения об ошибке",
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "controller.StatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "статус ответа",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "controller.TotalCostControllerResponse": {
            "type": "object",
            "properties": {
                "total_cost": {
                    "description": "суммарная стоимость подписок",
                    "type": "integer",
                    "example": 2000
                }
            }
        },
        "entity.Subscription": {
            "type": "object",
            "properties": {
                "end_date": {
                    "description": "дата окончания подписки (месяц и год)",
                    "type": "string"
                },
                "price": {
                    "description": "стоимость месячной подписки в рублях",
                    "type": "integer"
                },
                "service_name": {
                    "description": "название сервиса, предоставляющего подписку",
                    "type": "string"
                },
                "start_date": {
                    "description": "дата начала подписки (месяц и год)",
                    "type": "string"
                },
                "user_id": {
                    "description": "id пользователя в формате UUID",
                    "type": "string"
                }
            }
        },
        "entity.SubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "description": "дата окончания подписки (месяц и год)",
                    "type": "string",
                    "example": "09-2025"
                },
                "id": {
                    "description": "id подписки в бд",
                    "type": "integer",
                    "example": 1
                },
                "price": {
                    "description": "стоимость месячной подписки в рублях",
                    "type": "integer",
                    "example": 499
                },
                "service_name": {
                    "description": "название сервиса, предоставляющего подписку",
                    "type": "string",
                    "example": "Netflix"
                },
                "start_date": {
                    "description": "дата начала подписки (месяц и год)",
                    "type": "string",
                    "example": "08-2025"
                },
                "user_id": {
                    "description": "id пользователя в формате UUID",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Subscription aggregation service API",
	Description:      "API для управления подписками и расчета их стоимости.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
